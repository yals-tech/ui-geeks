"use strict";(self.webpackChunkui_geeks_in_web=self.webpackChunkui_geeks_in_web||[]).push([[1481],{81481:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var l=n(67294),a=n(87398),r=n(68947),i=n(12050),c=n(9167);const s=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h2"},"What is Virtual DOM"),l.createElement(r.Z,null,"The ",l.createElement(c.B,null,"virtual DOM (VDOM)"),' is a programming concept where an ideal, or "virtual", representation of a UI is kept in memory and synced with the "real" DOM by a library such as ReactDOM. This process is called',l.createElement(c.BI,null,"reconciliation"),"."),l.createElement(r.Z,null,'The term "virtual DOM" is usually associated with ',l.createElement(i.Z,null),l.createElement(c.BI,null,"React elements")," since they are the objects representing the user interface. React, however, also uses internal objects called ",l.createElement(i.Z,null),l.createElement(c.BI,null,'"fibers"')," to hold additional information about the component tree."),l.createElement(a.Z,{as:"h3"},"Is the Shadow DOM the same as the Virtual DOM"),l.createElement(r.Z,null,l.createElement(c.B,null,"No"),", they are different. The ",l.createElement(c.I,null,"Shadow DOM")," is a browser technology designed primarily for scoping variables and CSS in",l.createElement(i.Z,null)," ",l.createElement(c.BI,null,"web components"),". The virtual DOM is a concept implemented by libraries in JavaScript on top of browser APIs."),l.createElement(a.Z,{as:"h3"},"What is React Fiber"),l.createElement(r.Z,null,l.createElement(c.B,null,"Fiber")," is the new ",l.createElement(c.BI,null,"reconciliation engine")," in ",l.createElement(i.Z,null),l.createElement(c.B,null,"React 16"),". Its main goal is to enable incremental rendering of the virtual DOM"))}}}]);