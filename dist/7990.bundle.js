"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[7990],{97990:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var l=n(67294),a=n(87398),o=n(68947),c=n(12050),s=n(9167),r=[{label:l.createElement(l.Fragment,null,"Only call Hooks ",l.createElement(s.B,null,"at the top level"),". Don't call Hooks inside loops, conditions or nested functions.")},{label:l.createElement(l.Fragment,null,"Only call Hooks ",l.createElement(s.B,null,"from React function components"),". Don't call Hooks from regular JavaScript functions.")}];const u=function(){return l.createElement(l.Fragment,null,l.createElement(o.Z,null,l.createElement(s.B,null,"Hooks")," were added in React ",l.createElement(s.B,null,"v16.8"),". Hooks lets us use",l.createElement(c.Z,null)," ",l.createElement(s.I,null,"state")," and other React features without writing a class component. Hooks are functions that let us ",l.createElement(s.B,null,'"hook into"')," React",l.createElement(s.I,null,"state")," and ",l.createElement(s.I,null,"lifecycle")," features from function components. Hooks ",l.createElement(s.B,null,"don't work")," inside class components."),l.createElement(o.Z,null,"React provides a few built-in Hooks like ",l.createElement(s.I,null,"useState()"),", ",l.createElement(c.Z,null),l.createElement(s.I,null,"useEffect()"),", etc. We can also create custom hooks to reuse stateful behavior between different components."),l.createElement(a.Z,{as:"h2"},"Rules of Hooks"),l.createElement(o.Z,null,"Hooks are JavaScript functions, but they impose two additional rules:",l.createElement(s.GS,{unOrdered:!0,expanded:!0,items:r})))}}}]);