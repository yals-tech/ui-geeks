"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[4430,4535,6011,5311,6249,6104,7868,4284,9127],{69947:(e,t,l)=>{l.r(t),l.d(t,{TheTypesQuestions:()=>c});var n=l(67294),a=l(83819),r=l(74214),i=l(9167),o=l(53232),c=[{id:1,question:n.createElement(n.Fragment,null,"functions are just special type of object?"),options:[{label:"true",id:1},{label:"false",id:2}],type:o.M.Radio,name:"type_1",answer:1,explanation:"The functions are just special type of object (because functions are treated as first-class functions)."},{id:2,question:n.createElement(n.Fragment,null,"Number type is used to store below type of values:"),options:[{label:"Number",id:1},{label:"Floating point numbers",id:2},{label:"Both",id:3},{label:a.WR,id:4}],type:o.M.Checkbox,name:"type_2",answer:[3],explanation:"The Number type is a double-precision-64-bit binary format IEEE 754 type. It can store both integer and floating point numbers."},{id:3,question:n.createElement(n.Fragment,null,a.Fb," function is used to convert string to integers."),options:[{label:"integer()",id:1},{label:"parseInt()",id:2},{label:"parseFloat()",id:3},{label:"parseInteger()",id:4}],type:o.M.Radio,name:"type_3",answer:2,explanation:n.createElement(n.Fragment,null,"The parseInt() function is used to convert string value to integer.",n.createElement(i.cJ,null),'For example: parseInt("123"); // 123')},{id:4,question:n.createElement(n.Fragment,null,"Hexa-decimal values starts with:"),options:[{label:"Hex",id:1},{label:"0x",id:2},{label:"0H",id:3},{label:a.WR,id:4}],type:o.M.Checkbox,name:"type_4",answer:[2],explanation:'Strings beginning with "0x" or "0X" are treated as Hexa-decimal numbers (radix 16).'},{id:5,question:n.createElement(n.Fragment,null,"What would be the output of given code:",n.createElement(r.Z,null,"console.log(NaN + 5);\nconsole.log(null + 5);\nconsole.log(undefined + 5);")),options:[{label:n.createElement(n.Fragment,null,"NaN",n.createElement(i.cJ,null),"5",n.createElement(i.cJ,null),"NaN",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:1},{label:n.createElement(n.Fragment,null,"undefined",n.createElement(i.cJ,null),"undefined",n.createElement(i.cJ,null),"undefined",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:2},{label:n.createElement(n.Fragment,null,"null",n.createElement(i.cJ,null),"5",n.createElement(i.cJ,null),"null",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:3},{label:n.createElement(n.Fragment,null,"5",n.createElement(i.cJ,null),"5",n.createElement(i.cJ,null),"5",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:4}],type:o.M.Radio,name:"type_5",answer:1,explanation:n.createElement(n.Fragment,null,n.createElement(i.BI,null,"NaN")," is toxic, if it is provided as operand to any mathematical operation, the result will also be NaN. Therefore: ",n.createElement(i.cJ,null),"console.log(NaN + 5); // NaN",n.createElement(i.cJ,null),n.createElement(i.cJ,null),"The ",n.createElement(i.BI,null,"null")," value behaves as 0 (Zero) in numeric context. Therefore:",n.createElement(i.cJ,null),"console.log(null + 5); // 5",n.createElement(i.cJ,null),n.createElement(i.cJ,null),"The ",n.createElement(i.BI,null,"undefined")," value behaves as NaN in numeric context. Therefore:",n.createElement(i.cJ,null),"console.log(undefined + 5); // NaN")},{id:6,question:n.createElement(n.Fragment,null,"What would be the output of given code:",n.createElement(r.Z,null,"console.log(parseInt('12.25abc'));\nconsole.log(parseFloat('12.25abc'));\nconsole.log(+ '12.25abc');\n")),options:[{label:n.createElement(n.Fragment,null,"12.25",n.createElement(i.cJ,null),"12.25",n.createElement(i.cJ,null),"NaN",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:1},{label:n.createElement(n.Fragment,null,"12",n.createElement(i.cJ,null),"12.25",n.createElement(i.cJ,null),"NaN",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:2},,{label:n.createElement(n.Fragment,null,"12",n.createElement(i.cJ,null),"12",n.createElement(i.cJ,null),"12",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:3},,{label:n.createElement(n.Fragment,null,"12.25",n.createElement(i.cJ,null),"12.25",n.createElement(i.cJ,null),"12.25",n.createElement(i.cJ,null),n.createElement(i.cJ,null)),id:4}],type:o.M.Radio,name:"type_6",answer:2,explanation:n.createElement(n.Fragment,null,n.createElement(i.BI,null,"parseInt()")," and ",n.createElement(i.BI,null,"parseFloat()")," functions parse a string until they reach a character that isn't valid for the specified number format, then returns the number parsed up to that point. However, the",n.createElement(i.B,null,'"+"" operator')," converts the string to NaN, if there is any invalid character contained within it.")},{id:7,question:n.createElement(n.Fragment,null,a.Fb," can represent integers with arbitrary precision."),options:[{label:"Number",id:1},{label:"String",id:2},{label:"BigInt",id:3},{label:"Int",id:4}],type:o.M.Radio,name:"type_7",answer:3,explanation:"BigInt can represent integers with arbitrary precision. With BigInts we can store and manipulate large integers, even beyond the safe Integer limit for Numbers. A BigInt is created by appending 'n' to the end of an integer or by calling the constructor."},{id:8,question:n.createElement(n.Fragment,null,a.Fb," is a unique and immutable primitive value."),options:[{label:"Number",id:1},{label:"String",id:2},{label:"Array",id:3},{label:"Symbol",id:4}],type:o.M.Radio,name:"type_8",answer:4,explanation:"A symbol is a unique and immutable primitive value and may be used as the key of an object property. Symbol value is always unique."},{id:9,question:n.createElement(n.Fragment,null,"The ",n.createElement(i.I,null,"null")," behaves as ",a.Fb," in numeric context and"," ",a.Fb," in boolean context."),options:[{label:"null, false",id:1},{label:"0, false",id:2},{label:"false, false",id:3},{label:a.WR,id:4}],type:o.M.Radio,name:"type_9",answer:2,explanation:"The null value behaves as 0 (Zero) in numeric context and as false in boolean context. It is a type that indicates a deliberate non-value and it is only accessible through the null keyword."},{id:10,question:n.createElement(n.Fragment,null,"The ",n.createElement(i.I,null,"undefined")," behaves as ",a.Fb," in numeric context and",a.Fb," in boolean context."),options:[{label:"NaN, false",id:1},{label:"NaN, NaN",id:2},{label:"false, false",id:3},{label:"true, true",id:4}],type:o.M.Radio,name:"type_10",answer:1,explanation:"It is a type that indicates an uninitialized variable value, i.e., a value hasn't been assigned yet to the variable. The undefined value behaves as NaN in numeric context and as false in boolean content."}]},34535:(e,t,l)=>{l.r(t),l.d(t,{default:()=>s});var n=l(67294),a=l(87398),r=l(26006),i=l(68947),o=l(9167),c=l(33470);const s=function(){return n.createElement(n.Fragment,null,n.createElement(a.Z,{as:"h2"},"BigInt"),n.createElement(i.Z,null,"It can represent integers with arbitrary precision. With BigInts we can store and manipulate large integers, even beyond the safe Integer limit for Numbers. A BigInt is created by appending ",n.createElement(c.Z,{bold:!0},"'n'")," to the end of an integer or by calling the ",n.createElement(c.Z,{bold:!0},"constructor"),"."),n.createElement(i.Z,null,n.createElement(c.Z,{italic:!0},"12345699924n",n.createElement(o.cJ,null),"BigInt(12345699924)")),n.createElement(r.Z,null,n.createElement(c.Z,{italic:!0},"BigInt")," cannot be operated on interchangeably with the Number. A ",n.createElement(c.Z,{bold:!0},"TypeError")," will be thrown on such operations."))}},96011:(e,t,l)=>{l.r(t),l.d(t,{default:()=>u});var n=l(67294),a=l(74214),r=l(87398),i=l(68947),o=l(12050),c=l(9167),s=l(33470);const u=function(){return n.createElement(n.Fragment,null,n.createElement(r.Z,{as:"h2"},"Boolean"),n.createElement(i.Z,null,"JavaScript has a boolean type, with possible values of"," ",n.createElement(s.Z,{bold:!0},"true")," and ",n.createElement(s.Z,{bold:!0},"false"),".",n.createElement(c.GS,{unOrdered:!0,items:[{label:'false, 0, empty string (""), NaN, null, undefined becomes false.'},{label:"All other values become true."}]}),n.createElement(a.Z,null,'Boolean("") // false \nBoolean(23) // true'),n.createElement(i.Z,null,"Boolean operations like ",n.createElement(s.Z,{bold:!0},"&&")," (Logical AND),",n.createElement(o.Z,null),n.createElement(s.Z,{bold:!0},"||"),n.createElement(o.Z,null)," (Logical OR), ",n.createElement(s.Z,{bold:!0},"!")," (Logical NOT) are supported."),n.createElement(a.Z,null,"Boolean(1) && Boolean(false)    // false\nBoolean(1) || Boolean(false)    // true\n!Boolean(1)   // false\n")))}},45311:(e,t,l)=>{l.r(t),l.d(t,{default:()=>s});var n=l(67294),a=l(74214),r=l(87398),i=l(68947),o=l(9167),c=l(33470);const s=function(){return n.createElement(n.Fragment,null,n.createElement(r.Z,{as:"h2"},"null"),n.createElement(i.Z,null,"It is a type that indicates a deliberate non-value and it is only accessible through the null keyword.",n.createElement(o.cJ,null),n.createElement(o.cJ,null),n.createElement(c.Z,{italic:!0},"let t = null;")),n.createElement(i.Z,null,"The null value behaves as ",n.createElement(c.Z,{bold:!0},"0 (Zero)")," in numeric context and as ",n.createElement(c.Z,{bold:!0},"false")," in boolean context.",n.createElement(a.Z,null,"null * 10    // 0\nnull && true    // false")))}},16249:(e,t,l)=>{l.r(t),l.d(t,{default:()=>m});var n=l(67294),a=l(74214),r=l(87398),i=l(26006),o=l(68947),c=l(12050),s=l(9167),u=l(33470);const m=function(){return n.createElement(n.Fragment,null,n.createElement(r.Z,{as:"h2"},"Number"),n.createElement(o.Z,null,"The Number type is a double-precision-64-bit binary format IEEE 754 type. It can store numbers between -(2^53 - 1) to 2^53."),n.createElement(o.Z,null,"It can store both integer and floating point numbers, which may result in some strange behavior. For example:",n.createElement(s.cJ,null),n.createElement(a.Z,null,"console.log(3/2);\n// it will log 1.5 and not 1\nconsole.log(0.1+0.2);\n// it will log 0.30000000000000004")),n.createElement(o.Z,null,"The standard arithmetic operations are supported like addition, subtraction, modulus (remainder), etc.",n.createElement(s.cJ,null),n.createElement(a.Z,null,"console.log(10 + 50); // 60\nconsole.log(2 * 5);   // 10\nconsole.log(50 % 4);  // 2\n"),n.createElement(s.cJ,null),"There is also a built-in object ",n.createElement(s.BI,null,"Math")," for performing mathematical operations like Math.sin, Math.pow(), etc.",n.createElement(s.cJ,null),n.createElement(a.Z,null,"Math.sin(3.5);  // -0.35078322768961984\nMath.PI;    // 3.141592653589793\n\nMath.pow(2,3);  // 8\n//Equivalent to 2 raised to the power 3\n")),n.createElement(o.Z,null,n.createElement(r.Z,{as:"h6"},"parseInt()"),"This function is used to convert string value to integer.",n.createElement(s.cJ,null),n.createElement(s.I,null,"Syntax"),': parseInt("String representation of Number", base)',n.createElement(s.cJ,null),n.createElement(s.BI,null,"base"),": It is optional, default value is 10.",n.createElement(a.Z,null,'parseInt("123")         // 123\nparseInt("123",10)      // 123'),n.createElement(o.Z,null,'In older browsers, strings beginning with a "0" (Zero) were assumed to be in ',n.createElement(u.Z,{bold:!0},"OCTAL")," base (",n.createElement(u.Z,{italic:!0},"radix 8"),").",n.createElement(s.cJ,null),n.createElement(a.Z,null,'parseInt("010") // 8 (Octal value of 010)')),n.createElement(o.Z,null,"But in modern browsers, the above statement will print 10.",n.createElement(a.Z,null,'parseInt("010") // 10 \n// Not treated as OCTAL, used default base 10')),n.createElement(o.Z,null,n.createElement(u.Z,{bold:!0},"Hexa-decimal"),' values are still treated the same. Strings beginning with "0x" or "0X" are treated as Hexa-decimal numbers (',n.createElement(u.Z,{italic:!0},"radix 16"),").",n.createElement(a.Z,null,'parseInt("0x10") // 16 (Hexa-decimal value of 0x10)')),n.createElement(o.Z,null,"Therefore, it's always safer to pass ",n.createElement(s.BI,null,"'base'")," while working on Octal and Hexa-decimal values.",n.createElement(a.Z,null,'parseInt("010", 8)    // Will always give 8\nparseInt("0x10", 16)  // Will always give 16')),n.createElement(o.Z,null,n.createElement(r.Z,{as:"h6"},"parseFloat()"),"This function is used to convert string to floating point number. It always uses base 10.",n.createElement(s.cJ,null),n.createElement(u.Z,{italic:!0},"Syntax"),': parseFloat("String representation of Number")',n.createElement(a.Z,null,'parseFloat("1.23") // 1.23'))),n.createElement(o.Z,null,n.createElement(s.B,null,'Unary Operator "+"')," can also be used to convert strings to numbers.",n.createElement(a.Z,null,'+ "42"  // 42\n+ "010"  // 10\n+ "0x10"  // 16\n')),n.createElement(o.Z,null,"A special value called ",n.createElement(c.Z,null)," ",n.createElement(s.BI,null,"NaN"),n.createElement(c.Z,null),' ("Not a Number") is returned if the string is non-numeric.',n.createElement(a.Z,null,'parseInt("hello");  // NaN')),n.createElement(i.Z,null,n.createElement(u.Z,{bold:!0},"NaN")," is toxic, if it is provided as operand to any mathematical operation, the result will also be NaN. For example:",n.createElement(a.Z,null,"NaN + 5    // NaN")),n.createElement(o.Z,null,n.createElement(u.Z,{bold:!0},"Number.isNaN()")," function can be used to check if a given value is ",n.createElement(s.I,null,"NaN"),".",n.createElement(a.Z,null,'Number.isNaN("hello") // false\nNumber.isNaN(NaN) // true\n')),n.createElement(o.Z,null,n.createElement(u.Z,{bold:!0},"Do NOT")," use the global ",n.createElement(u.Z,{italic:!0},"isNaN( )"),n.createElement(c.Z,null),"function for checking NaN values, since it has unintuitive behavior.",n.createElement(a.Z,null,'isNaN("hello")   // true \nisNaN(undefined)    // true\nisNaN([1])  // false\nisNaN("1")  // false\nisNaN({})   // true\n')),n.createElement(o.Z,null,"Javascript also has special values ",n.createElement(u.Z,{bold:!0},"Infinity")," and",n.createElement(u.Z,{bold:!0},"-Infinity"),".",n.createElement(a.Z,null,"1/0     // Infinity\n-1/0    // -Infinity\n")),n.createElement(o.Z,null,n.createElement(u.Z,{bold:!0,italic:!0},"isFinite()"),n.createElement(c.Z,null),"function can be used to check whether value is finite or not.",n.createElement(a.Z,null,"isFinite(100)   // true\nisFinite(-Infinity)   // false\nisFinite(1/0)   //false\n")),n.createElement(i.Z,null,n.createElement(u.Z,{bold:!0,italic:!0},"parseInt()"),n.createElement(c.Z,null),"and",n.createElement(u.Z,{bold:!0,italic:!0},"parseFloat()"),n.createElement(c.Z,null),'functions parse a string until they reach a character that isn\'t valid for the specified number format, then returns the number parsed up to that point. However, the "+"" operator converts the string to'," ",n.createElement(u.Z,{bold:!0,italic:!0},"NaN"),", if there is any invalid character contained within it.",n.createElement(a.Z,null,'parseInt("12.25abc")    // 12\nparseFloat("12.25abc")  // 12.25\n+ "12.25abc"    // NaN\n')))}},66104:(e,t,l)=>{l.r(t),l.d(t,{default:()=>c});var n=l(67294),a=l(74214),r=l(87398),i=l(68947),o=l(33470);const c=function(){return n.createElement(n.Fragment,null,n.createElement(r.Z,{as:"h2"},"String"),n.createElement(i.Z,null,"Strings in JavaScript are sequences of unicode characters. More accurately, they are sequences of UTF-16 code units. Each code unit is represented by a 16-bit number. Each unicode character is represented by either 1 or 2 code units. Strings are immutable and cannot be modified."),n.createElement(i.Z,null,n.createElement(o.Z,{bold:!0},"Properties and Methods of String:"),n.createElement(a.Z,null,'"hello".length    // 5\n"hello".charAt(1)   // \'e\'\n"hello, world".replace("world", "Javascript") // "hello, JavaScript"\n"hello".toUpperCase() // "HELLO"\n"hello".startsWith("s") // false\n"hello".endsWith("o") // true\n"hello".endsWith("O") // false\n"hello".includes("lo") // true\n"hello".indexOf("lo") // 3\n"hello".repeat(2) // "hellohello"\n"hello".split(\'\') // ["h", "e", "l", "l", "o"]\n"hello".padStart(10,\'*\')  // "*****hello"\n"hello".padEnd(10,\'*\')  // "hello*****"\n\n" hello ".trim()  // "hello"\n" hello ".trimLeft()  // "hello "\n" hello ".trimRight() // " hello"\n\n"hello".substr(1, 2)    // "el"\n// Returns 2 characters, starting at index 1\n\n"hello".substring(1, 3)   // "el"\n// Returns characters between given indexes\n')))}},7868:(e,t,l)=>{l.r(t),l.d(t,{default:()=>s});var n=l(67294),a=l(74214),r=l(87398),i=l(26006),o=l(68947),c=l(33470);const s=function(){return n.createElement(n.Fragment,null,n.createElement(r.Z,{as:"h2"},"Symbol"),n.createElement(o.Z,null,"A symbol is a unique and immutable primitive value and may be used as the key of an object property. Symbol value is always unique."),n.createElement(a.Z,null,'const obj = { [Symbol("abc")]: "hello" };\n\nSymbol("abc") === Symbol("abc")   // false \n// Because Symbol() will always populate a unique key'),n.createElement(o.Z,null,n.createElement(c.Z,{bold:!0},"Symbol.for():")," In contrast to Symbol(), which always creates a unique key every time, Symbol.for() will create a new unique, if it is not yet created, otherwise, it will read and return an existing symbol with the given key from the",n.createElement(c.Z,{bold:!0},'"global Symbol registry"'),"."),n.createElement(a.Z,null,'Symbol.for("abc")   // Created a unique key\nSymbol.for("abc")   // Returned from global symbol registry'),n.createElement(o.Z,null,n.createElement(c.Z,{bold:!0},"Symbol.keyFor():")," This function returns a key for the given Symbol.",n.createElement(a.Z,null,'const sym = Symbol.for("abc")\nSymbol.keyFor(sym)    // "abc"')),n.createElement(i.Z,null,"Symbol.keyFor() do not work with Symbol()"))}},64430:(e,t,l)=>{l.r(t),l.d(t,{default:()=>I});var n=l(67294),a=l(9231),r=l(59044),i=l(87398),o=l(26006),c=l(68947),s=l(12050),u=l(9167),m=l(63333),d=l(49997),b=l(69947),E=l(34535),h=l(96011),p=l(45311),g=l(16249),f=l(66104),y=l(7868),Z=l(4284),v=[{label:n.createElement(n.Fragment,null,"There are ",n.createElement(u.B,null,"7")," primary types in JavaScript.")},{label:n.createElement(n.Fragment,null,n.createElement(u.BI,null,"Number")," type can store both integer and floating point numbers.")},{label:n.createElement(n.Fragment,null,"Unary operator ",n.createElement(u.B,null,'"+"')," can also be used to convert string to number.")},{label:n.createElement(n.Fragment,null,n.createElement(u.BI,null,"NaN")," is toxic, operations with NaN will always return NaN.")},{label:n.createElement(n.Fragment,null,n.createElement(u.BI,null,"BigInt")," represents integers with arbitrary precision.")},{label:n.createElement(n.Fragment,null,n.createElement(u.BI,null,"Symbol()")," always returns a unique value.")},{label:n.createElement(n.Fragment,null,n.createElement(u.I,null,'false, 0, empty string (""), NaN, null')," and ",n.createElement(u.I,null,"undefined")," are treated as",n.createElement(u.BI,null,"false"),".")}],N=[{label:"Number"},{label:"BigInt"},{label:"String"},{label:"Boolean"},{label:"Symbol"},{label:"Object",items:[{label:"Function"},{label:"Array"},{label:"Date"},{label:"RegExp"}]},{label:"null"},{label:"undefined"}],w=function(){return(0,a.Z)("UI-Geeks: JavaScript | Data Types"),n.createElement(r.Z,null,n.createElement(i.Z,null,"Data types"),n.createElement(c.Z,null,"Primarily there are ",n.createElement(u.B,null,"7")," types in JavaScript:",n.createElement(u.GS,{unOrdered:!0,items:[{label:"Number, BigInt, String, Boolean, Function, Object, Symbol"}]})),n.createElement(c.Z,null,"But there are couple of other types too available in JavaScript",n.createElement(u.GS,{unOrdered:!0,items:[{label:"undefined, null, Array, Date, RegExp"}]})),n.createElement(c.Z,null,"Also ",n.createElement(u.BI,null,"functions")," ",n.createElement(s.Z,null)," are just special type of",n.createElement(u.BI,null,"object")," ",n.createElement(s.Z,null)," (because functions are treated as first-class functions). On Summarizing all, the type diagram will look something like:"),n.createElement(c.Z,null,n.createElement(u.GS,{items:N,unOrdered:!0})),n.createElement(o.Z,null,"There are some built-in ",n.createElement(u.B,null,"Error")," types as well."),n.createElement(c.Z,null,"Let's learn each type in detail."),n.createElement(g.default,null),n.createElement(f.default,null),n.createElement(E.default,null),n.createElement(y.default,null),n.createElement(p.default,null),n.createElement(Z.default,null),n.createElement(h.default,null),n.createElement(d.Z,{items:v}),n.createElement(c.Z,null,n.createElement(m.Z,{questions:b.TheTypesQuestions})))};const I=(0,n.memo)(w)},4284:(e,t,l)=>{l.r(t),l.d(t,{default:()=>s});var n=l(67294),a=l(74214),r=l(87398),i=l(68947),o=l(12050),c=l(33470);const s=function(){return n.createElement(n.Fragment,null,n.createElement(r.Z,{as:"h2"},"undefined"),n.createElement(i.Z,null,"It is a type that indicates an uninitialized variable value, i.e., a value hasn't been assigned yet to the variable.",n.createElement(a.Z,null,"let t;\nconsole.log(t)  // undefined")),n.createElement(i.Z,null,"The"," ",n.createElement(c.Z,{bold:!0,italic:!0},"undefined"),n.createElement(o.Z,null),"value behaves as ",n.createElement(c.Z,{bold:!0},"NaN")," in numeric context and as"," ",n.createElement(c.Z,{bold:!0},"false")," in boolean content.",n.createElement(a.Z,null,"undefined + 10\t// NaN\nundefined && true   // false\n")))}},74214:(e,t,l)=>{l.d(t,{Z:()=>x});var n=l(4942),a=l(94184),r=l.n(a),i=l(67294),o=l(17606),c=l(83819),s=l(28949),u=l(93379),m=l.n(u),d=l(7795),b=l.n(d),E=l(90569),h=l.n(E),p=l(3565),g=l.n(p),f=l(19216),y=l.n(f),Z=l(44589),v=l.n(Z),N=l(62428),w={};w.styleTagTransform=v(),w.setAttributes=g(),w.insert=h().bind(null,"head"),w.domAPI=b(),w.insertStyleElement=y(),m()(N.Z,w),N.Z&&N.Z.locals&&N.Z.locals;var I=function(e){var t,l=e.children,a=e.language,u=void 0===a?"typescript":a,m=e.theme,d=e.showLineNumbers,b=void 0!==d&&d,E=e.codeBlock,h=void 0!==E&&E,p=e.highlight,g=e.copyBtn,f=void 0===g||g,y=(0,i.useContext)(s.I),Z=r()((t={},(0,n.Z)(t,"".concat(c.HL,"-code"),!0),(0,n.Z)(t,"".concat(c.HL,"-code-no-copy-btn"),!f),t));return i.createElement("div",{className:Z,style:{textAlign:"left"}},i.createElement(o.Z1,{text:l,language:u,showLineNumbers:b,theme:function(){switch(m){case"dracula":return o.cL;case"anOldHope":return o.dw;case"github":return o.bW;default:return y.theme===c.bF.DARK_THEME?o.g9:o.dw}}(),wrapLines:!0,codeBlock:h,highlight:p}))};const x=(0,i.memo)(I)},26006:(e,t,l)=>{l.d(t,{Z:()=>H});var n=l(4942),a=l(94184),r=l.n(a),i=l(67294),o=l(14289),c=l(78146),s=l(67115),u=l(76792),m=l(32209),d=l(41485),b=l(39602),E=l(44680),h=l(85893);const p=(0,b.Z)("h4");p.displayName="DivStyledAsH4";const g=(0,E.Z)("alert-heading",{Component:p}),f=(0,E.Z)("alert-link",{Component:s.Z}),y={variant:"primary",show:!0,transition:m.Z,closeLabel:"Close alert"},Z=i.forwardRef(((e,t)=>{const{bsPrefix:l,show:n,closeLabel:a,closeVariant:i,className:s,children:b,variant:E,onClose:p,dismissible:g,transition:f,...y}=(0,o.Ch)(e,{show:"onClose"}),Z=(0,u.vE)(l,"alert"),v=(0,c.Z)((e=>{p&&p(!1,e)})),N=!0===f?m.Z:f,w=(0,h.jsxs)("div",{role:"alert",...N?void 0:y,ref:t,className:r()(s,Z,E&&`${Z}-${E}`,g&&`${Z}-dismissible`),children:[g&&(0,h.jsx)(d.Z,{onClick:v,"aria-label":a,variant:i}),b]});return N?(0,h.jsx)(N,{unmountOnExit:!0,...y,ref:void 0,in:n,children:w}):n?w:null}));Z.displayName="Alert",Z.defaultProps=y;const v=Object.assign(Z,{Link:f,Heading:g});var N=l(83819),w=l(93379),I=l.n(w),x=l(7795),F=l.n(x),J=l(90569),S=l.n(J),B=l(3565),k=l.n(B),T=l(19216),q=l.n(T),A=l(44589),O=l.n(A),R=l(11137),L={};L.styleTagTransform=O(),L.setAttributes=k(),L.insert=S().bind(null,"head"),L.domAPI=F(),L.insertStyleElement=q(),I()(R.Z,L),R.Z&&R.Z.locals&&R.Z.locals;var M=function(e){var t=e.children,l=e.noteText,a=void 0===l?"Note":l,o=e.variant,c=void 0===o?"primary":o,s=r()((0,n.Z)({},"".concat(N.HL,"-note"),!0));return i.createElement("div",{className:s},i.createElement("div",{className:"note-text"},a),i.createElement(v,{key:c,variant:c},t))};const H=(0,i.memo)(M)},62428:(e,t,l)=>{l.d(t,{Z:()=>o});var n=l(8081),a=l.n(n),r=l(23645),i=l.n(r)()(a());i.push([e.id,".ui-geeks-code{margin-top:1.5rem;margin-bottom:1.5rem}.ui-geeks-code-no-copy-btn button{display:none}\n",""]);const o=i},11137:(e,t,l)=>{l.d(t,{Z:()=>o});var n=l(8081),a=l.n(n),r=l(23645),i=l.n(r)()(a());i.push([e.id,".ui-geeks-note{margin-top:1.2rem;margin-bottom:3rem;font-style:italic}.ui-geeks-note .note-text{font-style:italic;position:relative;font-weight:bold;top:13px;z-index:9;margin-left:15px;background-color:#aba8f1;width:fit-content;padding:2px 10px 2px 10px;border-radius:4px}.theme-dark .ui-geeks-note .note-text{background-color:#464646}.theme-dark .ui-geeks-note .alert-primary{color:#000000;background-color:#d6d6d6;border-color:#393939}\n",""]);const o=i}}]);