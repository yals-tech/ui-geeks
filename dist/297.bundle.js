"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[297],{30297:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var l=n(67294),a=n(87398),r=n(68947),c=n(12050),u=n(9167),i=[{label:l.createElement(l.Fragment,null,l.createElement(u.B,null,"value"),l.createElement(u.cJ,null),"The next value in the iteration sequence.")},{label:l.createElement(l.Fragment,null,l.createElement(u.B,null,"done"),l.createElement(u.cJ,null),"This is ",l.createElement(u.BI,null,"true")," if the ",l.createElement(u.I,null,"last value")," in the sequence has already been consumed. If value is present with ",l.createElement(u.B,null,"done"),", it is the iterator's ",l.createElement(u.I,null,"return value"),".")}];const s=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h2"},"Iterators"),l.createElement(r.Z,null,"An ",l.createElement(u.BI,null,"iterator")," is any ",l.createElement(u.I,null,"object")," which implements the",l.createElement(u.BI,null,"iterator protocol")," by having a ",l.createElement(u.BI,null,"next()")," method that returns an ",l.createElement(u.I,null,"object")," with two properties:",l.createElement(u.GS,{expanded:!0,items:i})),l.createElement(r.Z,null,"Once created, an iterator object can be iterated explicitly by repeatedly calling ",l.createElement(u.BI,null,"next()")," method. After a terminating value has been ",l.createElement(u.B,null,"yielded"),", additional calls to ",l.createElement(u.BI,null,"next()")," should continue to",l.createElement(u.BI,null,"return { done: true }"),"."),l.createElement(r.Z,null,"The most common iterator is the ",l.createElement(u.BI,null,"Array")," iterator, which returns each value in the associated array in sequence. Iterators can express sequences of unlimited size, such as range of integers between 0 and",l.createElement(c.Z,null)," ",l.createElement(u.I,null,"Infinity"),"."))}}}]);