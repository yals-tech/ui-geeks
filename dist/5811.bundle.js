"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[5811],{75811:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var l=t(67294),o=t(74214),r=t(91573),a=t(87398),c=t(68947),u=t(12050),s=t(9167);const i=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h2"},"When to use Context"),l.createElement(c.Z,null,"Context is designed to share data that can be considered ",l.createElement(s.B,null,'"global"'),l.createElement(u.Z,null)," for a tree of React components, such as the ",l.createElement(u.Z,null),l.createElement(s.I,null,"current user"),", ",l.createElement(s.I,null,"theme"),", or ",l.createElement(s.I,null,"preferred language"),". By using context, we can avoid passing props to intermediate elements of the child tree."),l.createElement(c.Z,null,l.createElement(s.IU,null,"Example:"),l.createElement(o.Z,{language:r.r.JSX},'const user = { name : "Default User", authenticated: false };\nconst UserContext = React.createContext(user);'),l.createElement(o.Z,{language:r.r.JSX},'const LoginButton = () => { \n  const userInfo = useContext(UserContext);\n  return <div>\n    <span>Username: {userInfo.name}</span>\n    <button>{userInfo.authenticated  ? "Logout" : "Login"}</button>\n  </div>\n}'),l.createElement(o.Z,{language:r.r.JSX},'const Home = () => { \n  const [userInfo, setUserInfo]  = useState(null) ;\t\n  const toggleLogin = () => { \n    setUserInfo(()=> {\n      return { name : "Home User", authenticated: true } \n    });\n  }\n\n  return <UserContext.Provider value={userInfo }>\n    <LoginButton />\n    <button onClick={toggleLogin}>Toggle Login</button>\n  </UserContext.Provider>\n}')),l.createElement(c.Z,null,"In the above code, ",l.createElement(s.B,null,"LoginButton")," component will render below elements on the ",l.createElement(s.B,null,"mount")," of the component.",l.createElement(o.Z,{language:r.r.HTML},"<span>Username: Default User</span>\n<button>Login</button>\n")),l.createElement(c.Z,null,"But once a user clicks on ",l.createElement(s.BI,null,"toggleButton")," in the ",l.createElement(s.B,null,"Home"),l.createElement(u.Z,null)," component, the ",l.createElement(s.B,null,"Home")," component will be ",l.createElement(u.Z,null),l.createElement(s.I,null,"re-rendered"),", because the value of the context will change. Now the ",l.createElement(s.B,null,"LoginButton")," component will render the below elements.",l.createElement(o.Z,{language:r.r.HTML},"<span>Username: Home User</span>\n<button>Logout</button>")))}},74214:(e,n,t)=>{t.d(n,{Z:()=>x});var l=t(4942),o=t(94184),r=t.n(o),a=t(67294),c=t(17606),u=t(83819),s=t(28949),i=t(93379),m=t.n(i),g=t(7795),d=t.n(g),h=t(90569),p=t.n(h),E=t(3565),b=t.n(E),f=t(19216),Z=t.n(f),v=t(44589),L=t.n(v),B=t(62428),w={};w.styleTagTransform=L(),w.setAttributes=b(),w.insert=p().bind(null,"head"),w.domAPI=d(),w.insertStyleElement=Z(),m()(B.Z,w),B.Z&&B.Z.locals&&B.Z.locals;var I=function(e){var n,t=e.children,o=e.language,i=void 0===o?"typescript":o,m=e.theme,g=e.showLineNumbers,d=void 0!==g&&g,h=e.codeBlock,p=void 0!==h&&h,E=e.highlight,b=e.copyBtn,f=void 0===b||b,Z=(0,a.useContext)(s.I),v=r()((n={},(0,l.Z)(n,"".concat(u.HL,"-code"),!0),(0,l.Z)(n,"".concat(u.HL,"-code-no-copy-btn"),!f),n));return a.createElement("div",{className:v,style:{textAlign:"left"}},a.createElement(c.Z1,{text:t,language:i,showLineNumbers:d,theme:function(){switch(m){case"dracula":return c.cL;case"anOldHope":return c.dw;case"github":return c.bW;default:return Z.theme===u.bF.DARK_THEME?c.g9:c.dw}}(),wrapLines:!0,codeBlock:p,highlight:E}))};const x=(0,a.memo)(I)},91573:(e,n,t)=>{t.d(n,{r:()=>l});var l={JavaScript:"javascript",TypeScript:"typescript",HTML:"html",CSS:"css",JSX:"jsx"}},62428:(e,n,t)=>{t.d(n,{Z:()=>c});var l=t(8081),o=t.n(l),r=t(23645),a=t.n(r)()(o());a.push([e.id,".ui-geeks-code{margin-top:1.5rem;margin-bottom:1.5rem}.ui-geeks-code-no-copy-btn button{display:none}\n",""]);const c=a}}]);