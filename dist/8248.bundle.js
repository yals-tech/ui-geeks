"use strict";(self.webpackChunkui_geeks_in_web=self.webpackChunkui_geeks_in_web||[]).push([[8248],{4612:(e,n,l)=>{l.r(n),l.d(n,{default:()=>s});var t=l(67294),a=l(74214),r=l(87398),u=l(68947),c=l(12050),m=l(9167);const s=function(){return t.createElement(t.Fragment,null,t.createElement(r.Z,{as:"h4"},"apply()"),t.createElement(u.Z,null,"This is similar to the ",t.createElement(m.I,null,"call()")," method, with just one difference that arguments are passed as an array.",t.createElement(c.Z,null),t.createElement(m.I,null,"arguments"),t.createElement(c.Z,null),"provided individually."),t.createElement(u.Z,null,t.createElement(m.I,null,"Syntax:")),t.createElement(u.Z,null,"apply()",t.createElement(m.cJ,null),t.createElement(m.BI,null,"this")," will be replaced with ",t.createElement(m.BI,null,"global")," in ",t.createElement(c.Z,null),t.createElement(m.I,null,"non-strict mode")," and ",t.createElement(m.BI,null,"undefined")," in ",t.createElement(m.I,null,"strict mode"),"."),t.createElement(u.Z,null,"apply(",t.createElement(m.BI,null,"thisArg"),")",t.createElement(m.cJ,null),t.createElement(m.BI,null,"this")," will be replaced with ",t.createElement(m.BI,null,"thisArg"),"."),t.createElement(u.Z,null,"apply(",t.createElement(m.BI,null,"thisArg"),", [arg1, arg2, …, argN])",t.createElement(m.cJ,null),t.createElement(m.BI,null,"this")," will be replaced with ",t.createElement(m.BI,null,"thisArg")," and the following",t.createElement(m.BI,null,"array of arguments")," will be assigned to function ",t.createElement(c.Z,null),t.createElement(m.I,null,"arguments"),"."),t.createElement(u.Z,null,t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nconst obj = {  a: 10, b: 20 };\nconst res = sum.apply(obj, [5, 25]);\nconsole.log(res)  // 60\n// Therefore:   10    +  20    +  5   +  25   = 60\n                this.a  this.b   num1   num2\n"),t.createElement(u.Z,null,"Because ",t.createElement(m.BI,null,"obj")," was passed as the value of ",t.createElement(m.BI,null,"thisArg"),",",t.createElement(m.BI,null,"this")," was replaced with",t.createElement(m.BI,null,"obj")," and ",t.createElement(m.BI,null,"[5, 25]")," were assigned to function",t.createElement(c.Z,null),t.createElement(m.I,null,"parameters"),".")))}},74193:(e,n,l)=>{l.r(n),l.d(n,{default:()=>i});var t=l(67294),a=l(74214),r=l(87398),u=l(26006),c=l(68947),m=l(12050),s=l(9167);const i=function(){return t.createElement(t.Fragment,null,t.createElement(r.Z,{as:"h4"},"bind()"),t.createElement(c.Z,null,"This method creates a new function that, when called, has it's",t.createElement(m.Z,null)," ",t.createElement(s.I,null,"this"),", set to the provided value, with the given arguments preceding any arguments provided when the new function is called."),t.createElement(c.Z,null,t.createElement(s.I,null,"Syntax:")),t.createElement(c.Z,null,"bind(",t.createElement(s.BI,null,"thisArg"),")",t.createElement(s.cJ,null),t.createElement(s.BI,null,"this")," will be replaced with ",t.createElement(s.BI,null,"thisArg"),"."),t.createElement(c.Z,null,"bind(",t.createElement(s.BI,null,"thisArg"),", arg1, arg2, …, argN)",t.createElement(s.cJ,null),t.createElement(s.BI,null,"this")," will be replaced with ",t.createElement(s.BI,null,"thisArg")," and following",t.createElement(m.Z,null)," ",t.createElement(s.I,null,"arguments")," will be assigned to function ",t.createElement(s.I,null,"arguments"),"."),t.createElement(c.Z,null,t.createElement(s.I,null,"bind()")," is similar to ",t.createElement(s.BI,null,"call()"),", with a difference that",t.createElement(s.BI,null,"thisArg")," and ",t.createElement(s.BI,null,"arguments")," can't be reassigned i.e., it holds the values from the ",t.createElement(s.B,null,"first bind call"),"."),t.createElement(c.Z,null,"The ",t.createElement(s.I,null,"bind()")," method returns a copy of the given function with the specified ",t.createElement(s.BI,null,"this")," value and initial arguments (if provided)."),t.createElement(c.Z,null,"The ",t.createElement(s.I,null,"bind()")," function creates a ",t.createElement(s.I,null,"new bound function"),". Calling a ",t.createElement(s.I,null,"bound function")," generally results in the execution of its wrapper function. The bound function will store the parameters passed, which includes the value of ",t.createElement(s.I,null,"this")," and the arguments, as its internal state. These values are stored in advance, instead of being passed the time of calling function."),t.createElement(c.Z,null,"This concept is also called ",t.createElement(s.B,null,"Function Currying"),", where a function is created from an existing function, by presetting some of the parameters."),t.createElement(c.Z,null,t.createElement(s.IU,null,"Example 1:"),t.createElement(s.cJ,null),"In below example, the argument ",t.createElement(s.B,null,'"a"')," of the ",t.createElement(s.BI,null,"multiply()"),t.createElement(m.Z,null),"function is assigned the value ",t.createElement(s.B,null,"2")," in advance.",t.createElement(a.Z,null,"function multiply(a, b) { return a * b; }\nconst multiplyByTwo = multiply.bind(this, 2);\nconsole.log(multiplyByTwo(5));\t// 10")),t.createElement(s.cJ,null),t.createElement(c.Z,null,t.createElement(s.IU,null,"Example 2:"),t.createElement(s.cJ,null),"Similarly, in below example, the argument ",t.createElement(s.B,null,'"a"')," of the",t.createElement(s.BI,null,"multiply()"),t.createElement(m.Z,null),"function is assigned the value ",t.createElement(s.B,null,"3")," in advance.",t.createElement(a.Z,null,"function multiply(a, b) { return a * b; }\nconst multiplyByThree = multiply.bind(this, 3);\nconsole.log(multiplyByThree(10));\t// 30")),t.createElement(s.cJ,null),t.createElement(c.Z,null,t.createElement(s.IU,null,"Example 3:"),t.createElement(s.cJ,null),"Below example, demonstrates that binding can't be reassigned.",t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nconst obj = { a: 10, b : 20 };\nconst newSumFn = sum.bind(obj, 5, 15);\nconst res = newSumFn();\nconsole.log(res)  // 50\n\n// Passing fresh arguments here\nconst res1 = newSumFn(100, 200);\nconsole.log(res1) // 50\n// Still prints 50, fresh arguments were ignored. \n"),t.createElement(c.Z,null,"The value of ",t.createElement(s.BI,null,"res1")," was ",t.createElement(s.I,null,"50"),", because",t.createElement(s.BI,null,"arguments passed at the time of call")," were ignored. This proves that arguments can't be reassigned. Values given at the time of calling function are ignored here.")),t.createElement(c.Z,null,t.createElement(s.IU,null,"Example 4:"),t.createElement(s.cJ,null),t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nconst obj = { a: 10, b : 20 };\nconst newSumFn = sum.bind(obj, 5, 15);\nconst res = newSumFn();\nconsole.log(res)  // 50\n\nconst anotherObj = { a: 100, b: 200 };\nconst anotherSumFn = newSumFn(anotherObj, 500, 1000);\nconst res2 = anotherSumFn();\nconsole.log(res2) // 50"),t.createElement(c.Z,null,"The value of ",t.createElement(s.BI,null,"res2")," was ",t.createElement(s.I,null,"50"),", because",t.createElement(s.BI,null,"anotherObj")," passed as ",t.createElement(s.BI,null,"this")," at the time of call was ignored. This proves that ",t.createElement(s.BI,null,"this")," can't be reassigned. Values given at the time of calling function are ignored here. Also, observe that ",t.createElement(s.BI,null,"anotherSumFn")," was created from an earlier binded function",t.createElement(s.BI,null,"newSumFn")," ",t.createElement(m.Z,null)," and not ",t.createElement(s.BI,null,"sum"),".")),t.createElement(u.Z,null,"Original function can be bound multiple times. For example:",t.createElement(s.cJ,null),"const anotherSumFn = ",t.createElement(s.B,null,"sum.bind"),"(anotherObj, 500, 1000);",t.createElement(s.cJ,null),"const res2 = anotherSumFn();",t.createElement(s.cJ,null),"console.log(res2);  // 1800"))}},64338:(e,n,l)=>{l.r(n),l.d(n,{default:()=>s});var t=l(67294),a=l(74214),r=l(87398),u=l(68947),c=l(12050),m=l(9167);const s=function(){return t.createElement(t.Fragment,null,t.createElement(r.Z,{as:"h4"},"call()"),t.createElement(u.Z,null,"This method calls the function with given ",t.createElement(m.BI,null,"this")," value and",t.createElement(c.Z,null),t.createElement(m.I,null,"arguments"),t.createElement(c.Z,null),"provided individually."),t.createElement(u.Z,null,t.createElement(m.I,null,"Syntax:")),t.createElement(u.Z,null,"call()",t.createElement(m.cJ,null),t.createElement(m.BI,null,"this")," will be replaced with ",t.createElement(m.BI,null,"global")," in ",t.createElement(c.Z,null),t.createElement(m.I,null,"non-strict mode")," and ",t.createElement(m.BI,null,"undefined")," in ",t.createElement(m.I,null,"strict mode"),"."),t.createElement(u.Z,null,"call(",t.createElement(m.BI,null,"thisArg"),")",t.createElement(m.cJ,null),t.createElement(m.BI,null,"this")," will be replaced with ",t.createElement(m.BI,null,"thisArg"),"."),t.createElement(u.Z,null,"call(",t.createElement(m.BI,null,"thisArg"),", arg1, arg2, …, argN)",t.createElement(m.cJ,null),t.createElement(m.BI,null,"this")," will be replaced with ",t.createElement(m.BI,null,"thisArg")," and following",t.createElement(c.Z,null)," ",t.createElement(m.I,null,"arguments")," will be assigned to function ",t.createElement(m.I,null,"arguments"),"."),t.createElement(u.Z,null,t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nvar a = 100;\nvar b = 200;\n// Both variables are declared in the global object.\n\nconst res = sum.call(null, 2, 5);\nconsole.log(res)  // 307\n// Because null was passed as the value of thisArg,\n// this was replaced with the global object.\n// Therefore:   100  +  200    +  2   +  5   = 307\n                this.a  this.b   num1   num2\n")),t.createElement(u.Z,null,t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nconst obj = {  a: 10, b: 20 };\nconst res = sum.call(obj, 5, 25);\nconsole.log(res)  // 60\n// Therefore:   10    +  20    +  5   +  25   = 60\n                this.a  this.b   num1   num2\n")),t.createElement(u.Z,null,"The ",t.createElement(m.B,null,"call()")," allows for a function/method belonging to one object to be assigned and called for a different object."),t.createElement(a.Z,null,"const obj = { \n   a: 10,\n   b: 20,\n   sum(num1, num2) {\n    return this.a + this.b + num1 + num2);\n  }\n};\n\nconst anotherObj = { a: 100, b: 200 };\nconst res = obj.sum.call(anotherObj, 5, 5);\nconsole.log(res)  // 307"))}},66292:(e,n,l)=>{l.r(n),l.d(n,{default:()=>s});var t=l(67294),a=l(74214),r=l(87398),u=l(68947),c=l(12050),m=l(9167);const s=function(){return t.createElement(t.Fragment,null,t.createElement(r.Z,{as:"h4"},'When "this" is not set by the function call'),t.createElement(u.Z,null,t.createElement(m.IU,null,"In Non-Strict Mode:"),t.createElement(m.cJ,null),"In this ",t.createElement(m.I,null,"non-strict")," mode, ",t.createElement(m.I,null,"this")," will default to the",t.createElement(c.Z,null),t.createElement(m.I,null,"global object"),", which is a ",t.createElement(m.BI,null,"window")," in the browser."),t.createElement(a.Z,null,"function getThis() { return this; }\ngetThis() === window; // true\n"),t.createElement(m.cJ,null),t.createElement(u.Z,null,t.createElement(m.IU,null,"In Strict Mode:"),t.createElement(m.cJ,null),"In this ",t.createElement(m.I,null,"strict mode"),", the value of ",t.createElement(m.I,null,"this")," will default to",t.createElement(m.BI,null,"undefined"),"."),t.createElement(a.Z,null,'function getThisInStrictMode() { \n  "use strict";\n  return this; \n}\n\ngetThisInStrictMode() === undefined;  // true'))}},99499:(e,n,l)=>{l.r(n),l.d(n,{default:()=>s});var t=l(67294),a=l(74214),r=l(87398),u=l(68947),c=l(12050),m=l(9167);const s=function(){return t.createElement(t.Fragment,null,t.createElement(u.Z,null,t.createElement(r.Z,{as:"h4"},'When "this" is set by the function call'),t.createElement(u.Z,null,"The ",t.createElement(m.B,null,"call()"),", ",t.createElement(m.B,null,"apply()")," and ",t.createElement(m.B,null,"bind()")," methods can be used to set the value of ",t.createElement(m.BI,null,'"this"')," for the called function."),t.createElement(a.Z,null,'const  obj = { name: "Name from obj" };\nvar name = "Name from Global";\nfunction getName() { return this.name; }\nlet nameValue = getName();\nconsole.log(nameValue);\t// "Name from Global"\n'),t.createElement(u.Z,null,t.createElement(m.I,null,'"Name from Global"')," was printed, because ",t.createElement(m.BI,null,"this")," was not set by the function call, therefore",t.createElement(m.BI,null,"this")," refers to a ",t.createElement(m.I,null,"global object"),"."),t.createElement(a.Z,null,'const  obj = { name: "Name from obj" };\nvar name = "Name from Global";\nfunction getName() { return this.name; }\nlet nameValue = getName.call(obj);\nconsole.log(nameValue);\t// "Name from obj"\n'),t.createElement(u.Z,null,t.createElement(m.I,null,'"Name from obj"')," was printed, because ",t.createElement(m.BI,null,"call(obj)"),t.createElement(c.Z,null),"methods set the value of ",t.createElement(m.BI,null,"this")," to ",t.createElement(m.BI,null,"obj"),"."),t.createElement(a.Z,null,'let nameValue = getName.apply(obj);\nconsole.log(nameValue);\t// "Name from obj"\n'),t.createElement(u.Z,null,t.createElement(m.I,null,'"Name from obj"')," was printed, because ",t.createElement(m.BI,null,"apply(obj)"),t.createElement(c.Z,null),"methods set the value of ",t.createElement(m.BI,null,"this")," to ",t.createElement(m.BI,null,"obj"),"."),t.createElement(m.cJ,null),t.createElement(u.Z,null,"In ",t.createElement(m.I,null,"non-strict mode"),", with ",t.createElement(m.BI,null,"call"),", ",t.createElement(m.BI,null,"apply")," and",t.createElement(m.BI,null,"bind"),", if the value passed as this is not an ",t.createElement(m.I,null,"object"),", an attempt will be made to convert it to ",t.createElement(m.I,null,"object"),". Values",t.createElement(m.BI,null,"null")," and ",t.createElement(m.BI,null,"undefined")," becomes the ",t.createElement(m.I,null,"global object"),"."),t.createElement(a.Z,null,"function getThis() { \n  console.log(Object.prototype.toString.call(this));\n}\ngetThis.call(10); // [Object Number]"),t.createElement(u.Z,null,"In above code, ",t.createElement(m.I,null,"Primitive number")," ",t.createElement(m.B,null,"10")," is converted to"," ",t.createElement(m.I,null,"object")," by ",t.createElement(m.BI,null,"new Number(10)"),"."),t.createElement(a.Z,null,"function getThis() { \n  console.log(Object.prototype.toString.call(this));\n}\ngetThis.call(undefined);  // [Object global]"),t.createElement(u.Z,null,"In above code, the ",t.createElement(m.BI,null,"undefined")," is converted to the",t.createElement(m.BI,null,"global object"),"."),t.createElement(u.Z,null,"Let's understand ",t.createElement(m.B,null,"call()"),", ",t.createElement(m.B,null,"apply()")," and ",t.createElement(m.B,null,"bind()"),t.createElement(c.Z,null),"methods in more detail.")))}},65508:(e,n,l)=>{l.r(n),l.d(n,{default:()=>E});var t=l(67294),a=l(87398),r=l(68947),u=l(9167),c=l(4612),m=l(74193),s=l(64338),i=l(66292),o=l(99499);const E=function(){return t.createElement(t.Fragment,null,t.createElement(a.Z,{as:"h3"},'Value of "this" in the Function Context'),t.createElement(r.Z,null,"Inside a function, the value of ",t.createElement(u.I,null,"this")," depends on how the function is called."),t.createElement(r.Z,null,t.createElement(i.default,null),t.createElement(o.default,null),t.createElement(s.default,null),t.createElement(c.default,null),t.createElement(m.default,null)))}}}]);